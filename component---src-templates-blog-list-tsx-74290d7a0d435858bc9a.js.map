{"version":3,"sources":["webpack:///./src/templates/blog-list.tsx"],"names":["BlogIndex","data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","currentPage","isFirst","isLast","numPages","prevPage","nextPage","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","display","alignItems","date","writeAuthor","dangerouslySetInnerHTML","__html","description","excerpt","flexWrap","justifyContent","listStyle","padding","rel"],"mappings":"2FAAA,4FAqHeA,UAjFG,SAAC,GAIiB,IAHlCC,EAGkC,EAHlCA,KACAC,EAEkC,EAFlCA,SACAC,EACkC,EADlCA,YAEMC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAC7BC,EAA0BR,EAA1BQ,YAEFC,EAA0B,IAAhBD,EACVE,EAASF,IAHmBR,EAAbW,SAIfC,EAAWJ,EAAc,GAAM,EAAI,IAAxB,KAAkCA,EAAc,GAC3DK,EAAW,KAAIL,EAAc,GAEnC,OACE,kBAAC,IAAD,CAAQT,SAAUA,EAAUK,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACVC,EAAMS,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUC,GAAIT,EAAKE,OAAOC,MACjDd,IAGL,yBACQgB,MAAO,CACLK,QAAS,OACTC,WAAY,WAGtB,+BAAQX,EAAKC,YAAYW,KAAzB,QAA0C,kBAAC,IAAD,MAN1C,IAM2D,+BAAQZ,EAAKC,YAAYY,eAGtF,iCACE,uBACEC,wBAAyB,CACvBC,OAAQf,EAAKC,YAAYe,aAAehB,EAAKiB,gBAQzD,6BACE,wBACEZ,MAAO,CACLK,QAAS,OACTQ,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,6BACI3B,GACA,kBAAC,OAAD,CAAMe,GAAIZ,EAAUyB,IAAI,QAAxB,oBAKJ,6BACI3B,GACA,kBAAC,OAAD,CAAMc,GAAIX,EAAUwB,IAAI,QAAxB","file":"component---src-templates-blog-list-tsx-74290d7a0d435858bc9a.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport ProfileImage from \"../components/profileImage\"\n\ntype PageContext = {\n  currentPage: number\n  numPages: number\n}\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n          writeAuthor: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({\n  data,\n  location,\n  pageContext,\n}: PageProps<Data, PageContext>) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const { currentPage, numPages } = pageContext\n\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? \"/\" : `/${currentPage - 1}`\n  const nextPage = `/${currentPage + 1}`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Tech Blog\" />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <div\n                      style={{\n                        display: `flex`,\n                        alignItems: `center`,\n                      }}\n                    >\n              <small>{node.frontmatter.date} || </small><ProfileImage /> <small>{node.frontmatter.writeAuthor}</small>\n            </div>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {!isFirst && (\n              <Link to={prevPage} rel=\"prev\">\n                ← Previous Page\n              </Link>\n            )}\n          </li>\n          <li>\n            {!isLast && (\n              <Link to={nextPage} rel=\"next\">\n                Next Page →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            writeAuthor\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}